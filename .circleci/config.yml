version: 2
jobs:
  build:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.6.3-stretch-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: rails_post
          POSTGRES_PASSWORD: ''
    steps:
      - checkout

      - run:
          name: bundle install
          command: gem install bundler:2.1.4
      - run:
          name: update bundler
          command: bundle -v

      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-
      - run:
          name: bundle isntall
          command: bundle check --path vendor/bundle || bundle install --deployment
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-
      - run:
          name: yarn install
          command: yarn isntall --cache-folder ~/.cache/yarn
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            ~/.cache/yarn
      - run:
          name: define DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: set DB
          command: bin/rails db:schema:load --trace
      - run:
          name: rspec
          command: |
            bundle exec rspec --profile 10 \
                    --format RspecJunitFormatter \
                    --out test_results/rspec.xml \
                    --format progress \
                    $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results
